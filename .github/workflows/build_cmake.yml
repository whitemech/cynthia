#
# Three jobs:
# - lint: check linting
# - build: make a build for all the targets
# - test: run tests

name: Cynthia CI pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:

jobs:
  lint:
    continue-on-error: false
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
        sudo apt-get install -y clang-format-9
    - name: Check File Headers
      run: python3 ./scripts/check_copyright_notice.py
    - name: Check clang-format
      run: ./scripts/check-clang-format.sh

  # Test that the build of all the targets works.
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04]  # TODO include macos-latest, windows-latest
        compiler: [g++-9]

    continue-on-error: true
    needs: lint
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy-9
          sudo apt-get install -y wget

          # install flex/bison
          sudo apt-get purge -y flex
          sudo apt-get purge -y bison
          sudo apt-get install -y flex bison
          sudo apt-get autoremove

          sudo python3 -m pip install gcovr
#      - name: Check clang-tidy
#        run: ./scripts/check-clang-tidy.sh
#      - name: Install dependencies
#        run: sudo ./scripts/_ci-install-dependencies-ubuntu.sh
      - name: Configure CMake
        env:
          CXX: ${{ matrix.compiler }}
        run: ./scripts/_ci-configure.sh
      - name: Build all
        run: cd build && VERBOSE=1 make -j
#      - name: Build app
#        run: cd build && VERBOSE=1 make cynthia-app -j
#      - name: Build benchmarks
#        run: cd build && VERBOSE=1 make lydiaBench -j

  # Build and run the tests.
  test:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]  # TODO include macos-latest, windows-latest
        compiler: [ g++-9 ]

    continue-on-error: false
    needs: lint
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy-9
          sudo apt-get install -y wget git cmake

          # install flex/bison
          sudo apt-get purge -y flex
          sudo apt-get purge -y bison
          sudo apt-get install -y flex bison
          sudo apt-get autoremove

          sudo apt-get install -y graphviz libgraphviz-dev
          sudo python3 -m pip install gcovr

          # download Codecov uploader script
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${{ secrets.CODECOV_TOKEN }}
#      - name: Install dependencies
#        run: sudo ./scripts/_ci-install-dependencies-ubuntu.sh
      - name: Configure CMake
        env:
          CXX: ${{ matrix.compiler }}
        run: |
          echo "Configuring tests"
          ./scripts/_ci-configure.sh
      - name: Run tests for module "logic" "${{ secrets.CODECOV_TOKEN }}"
        run: ./scripts/_ci-test.sh logic
      - name: Run tests for module "parser" "${{ secrets.CODECOV_TOKEN }}"
        run: ./scripts/_ci-test.sh parser
      - name: Run tests for module "core" "${{ secrets.CODECOV_TOKEN }}"
        run: ./scripts/_ci-test.sh core
